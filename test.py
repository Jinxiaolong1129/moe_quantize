from datasets import load_dataset

custom_cache_dir = "data"
dataset = load_dataset("mit-han-lab/pile-val-backup", cache_dir=custom_cache_dir)









# from bitstring import Bits

# def to_2bit_binary(num):
#     # Ensure the number is within the valid range for 2-bit representation
#     if num < 0 or num > 3:
#         raise ValueError("Number must be between 0 and 3 for 2-bit representation")
    
#     # Convert the number to a 2-bit binary string
#     binary_str = Bits(uint=num, length=2).bin
    
#     return binary_str

# # Example usage:
# number = 51238
# binary_representation = to_2bit_binary(number)
# print(f"{number} in 2-bit binary: {binary_representation}")


# qweight
# tensor([[ 1516208772,  1687447657, -1289842059,  ..., -1271866846,
#           -501231389,  1830785575],
#         [ 1465746307,  1653957990, -1323527309,  ..., -1171464926,
#           -501165339,  1864339495],
#         [ 1516208772,  1687447657, -1289842059,  ..., -1271866846,
#           -501231389,  1830785575],
#         ...,
#         [ 1093453381,  1271546939,  1019010617,  ...,   551688676,
#            500174362,   869583064],
#         [ 1143982657,  1238255678,   952360507,  ...,   501552871,
#            500305432,   903136985],
#         [ 1143982657,  1238255678,   952360507,  ...,   501552871,
#            500305432,   903136985]], device='cuda:0', dtype=torch.int32)



# intweight
# tensor([[132, 130,  95,  ..., 146,  31, 109],
#         [131, 131,  93,  ..., 144,  31, 111],
#         [132, 130,  95,  ..., 146,  31, 109],
#         ...,
#         [ 69, 198,  44,  ..., 200, 212,  51],
#         [ 65, 202,  47,  ..., 198, 212,  53],
#         [ 65, 202,  47,  ..., 198, 212,  53]], device='cuda:0',
#        dtype=torch.int32)

# scales
# tensor([[0.0047, 0.0037, 0.0053,  ..., 0.0038, 0.0094, 0.0037],
#         [0.0042, 0.0039, 0.0047,  ..., 0.0017, 0.0049, 0.0017],
#         [0.0051, 0.0040, 0.0177,  ..., 0.0071, 0.0167, 0.0074],
#         ...,
#         [0.0029, 0.0024, 0.0034,  ..., 0.0029, 0.0070, 0.0025],
#         [0.0066, 0.0063, 0.0130,  ..., 0.0048, 0.0086, 0.0052],
#         [0.0070, 0.0077, 0.0074,  ..., 0.0030, 0.0163, 0.0031]],
#        device='cuda:0', dtype=torch.float16)

# scales.shape
# torch.Size([64, 4096])





# quantize
# intweight
# tensor([[ 7,  8,  6,  ...,  9,  2,  6],
#         [ 7,  8,  6,  ...,  9,  2,  6],
#         [ 7,  8,  6,  ...,  9,  2,  6],
#         ...,
#         [ 3, 13,  2,  ..., 12, 13,  2],
#         [ 3, 13,  2,  ..., 12, 13,  2],
#         [ 3, 13,  2,  ..., 12, 13,  2]], device='cuda:0', dtype=torch.int32)

# zeros
# tensor([[132, 130,  95,  ..., 146,  31, 109],
#         [138, 117, 122,  ..., 160, 154, 100],
#         [156, 118,  90,  ..., 117, 203, 123],
#         ...,
#         [132,  92, 115,  ..., 113, 122, 139],
#         [ 86, 179,  40,  ..., 191, 215,  51],
#         [ 65, 202,  47,  ..., 198, 212,  53]], device='cuda:0',
#        dtype=torch.int32)
# qweight
# tensor([[ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         [ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         [ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         ...,
#         [ 1128125219, -1841450301,  1026072891,  ...,  -769025758,
#            288026134,   739368401],
#         [ 1128125219, -1841450301,  1026072891,  ...,  -768960734,
#            288026133,   739368401],
#         [ 1128125219, -1841450301,  1026072891,  ...,  -768960734,
#            288026133,   739368401]], device='cuda:0', dtype=torch.int32)
# qzeros
# tensor([[ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         [ 1432852088, -1507228284,  1247524215,  ..., -1753843896,
#           1433970791,  1768200597],
#         [  879146314,  -750927229,   756662948,  ...,  2099820087,
#            841407528,  1998704066],
#         ...,
#         [ 1787127928,  1755732041,  2006416008,  ...,  2042258795,
#           1769372009, -2022082456],
#         [ 1378599460, -1053961310,   774549803,  ...,  1410696761,
#            286911530,   739368401],
#         [ 1128125219, -1841450301,  1026072891,  ...,  -768960734,
#            288026133,   739368401]], device='cuda:0', dtype=torch.int32)





# eval
# qweight
# tensor([[ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         [ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         [ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         ...,
#         [ 1128125219, -1841450301,  1026072891,  ...,  -769025758,
#            288026134,   739368401],
#         [ 1128125219, -1841450301,  1026072891,  ...,  -768960734,
#            288026133,   739368401],
#         [ 1128125219, -1841450301,  1026072891,  ...,  -768960734,
#            288026133,   739368401]], device='cuda:0', dtype=torch.int32)
# qzeros
# tensor([[ 1448646247, -2068232666,  -932342069,  ...,  -943113828,
#          -1110039835,  1776034350],
#         [ 1432852088, -1507228284,  1247524215,  ..., -1753843896,
#           1433970791,  1768200597],
#         [  879146314,  -750927229,   756662948,  ...,  2099820087,
#            841407528,  1998704066],
#         ...,
#         [ 1787127928,  1755732041,  2006416008,  ...,  2042258795,
#           1769372009, -2022082456],
#         [ 1378599460, -1053961310,   774549803,  ...,  1410696761,
#            286911530,   739368401],
#         [ 1128125219, -1841450301,  1026072891,  ...,  -768960734,
#            288026133,   739368401]], device='cuda:0', dtype=torch.int32)

# iweight
# tensor([[ 7,  8,  6,  ...,  9,  2,  6],
#         [ 7,  8,  6,  ...,  9,  2,  6],
#         [ 7,  8,  6,  ...,  9,  2,  6],
#         ...,
#         [ 3, 13,  2,  ..., 12, 13,  2],
#         [ 3, 13,  2,  ..., 12, 13,  2],
#         [ 3, 13,  2,  ..., 12, 13,  2]], device='cuda:0', dtype=torch.int8)